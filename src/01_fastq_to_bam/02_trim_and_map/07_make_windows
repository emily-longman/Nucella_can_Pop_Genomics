# This set of commands will create a window file which will be  used in step 08_build_DB.sh

# More specifically, we will extract all of the names of the contigs/scaffolds in the genome. We will then break it up into partitions/chunks with 1000 contigs in each chunk.

#--------------------------------------------------------------------------------

# This script will merge gVCFs into a unified database for genotype calling. 

# Load modules 
module load R/4.4.0

#--------------------------------------------------------------------------------

# Define important file locations

# WORKING_FOLDER is the core folder where this pipeline is being run.
WORKING_FOLDER=/gpfs2/scratch/elongman/Nucella_can_Pop_Genomics/data/processed/fastq_to_bam

# This is the location where the reference genome is stored.
REFERENCE_FOLDER=/netfiles/pespenilab_share/Nucella/processed/Base_Genome/Base_Genome_Oct2024/Crassostrea_softmask

# This is the path to the reference genome.
REFERENCE=$REFERENCE_FOLDER/N.canaliculata_assembly.fasta.softmasked.fa

#--------------------------------------------------------------------------------


library(magrittr)
library(data.table)
library(foreach)

### SWD wins:
gen_Ls =
data.frame(
chr = c("chrX", "chr2L", "chr2R", "chr3" , "chr4", "chrY"),
L = c(
32723399,
26650000,
24272511,
93255888,
2560000,
13207119)
)


###
win.bp <- 1.2e5
step.bp <-win.bp+1

## prepare windows
wins <- foreach(chr.i=gen_Ls$chr, .combine="rbind", .errorhandling="remove")
%do%{tmp <- gen_Ls 
%>%filter(chr == chr.i)data.table(chr=chr.i,
start=seq(from=1, to=tmp$L-win.bp, by=step.bp),
end=seq(from=1, to=tmp$L-win.bp, by=step.bp) + win.bp)
}

wins[,i:=1:dim(wins)[1]]

dim(wins)

write.table(wins, file = "/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/ky_swd/1.2.SNP_calling/SWD.jobs.txt", 
append = FALSE, quote = FALSE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE,
col.names = FALSE, qmethod = c("escape", "double"),
fileEncoding = "")
